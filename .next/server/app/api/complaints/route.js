/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/complaints/route";
exports.ids = ["app/api/complaints/route"];
exports.modules = {

/***/ "(rsc)/./app/api/complaints/route.ts":
/*!*************************************!*\
  !*** ./app/api/complaints/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n/* harmony import */ var _models_Complaint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/models/Complaint */ \"(rsc)/./models/Complaint.ts\");\n/* harmony import */ var _lib_imageProcessing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/imageProcessing */ \"(rsc)/./lib/imageProcessing.ts\");\n/* harmony import */ var _lib_storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/storage */ \"(rsc)/./lib/storage.ts\");\n/* harmony import */ var _lib_complaintService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/complaintService */ \"(rsc)/./lib/complaintService.ts\");\n\n\n\n\n\n\nasync function GET(request) {\n    try {\n        await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        const { searchParams } = new URL(request.url);\n        const statusParam = searchParams.get('status');\n        const validStatuses = [\n            'pending',\n            'in_progress',\n            'resolved',\n            'stalled',\n            'revived'\n        ];\n        const filters = {\n            status: statusParam && validStatuses.includes(statusParam) ? statusParam : undefined,\n            state: searchParams.get('state') || undefined,\n            city: searchParams.get('city') || undefined,\n            category: searchParams.get('category') || undefined,\n            ward: searchParams.get('ward') || undefined\n        };\n        const page = parseInt(searchParams.get('page') || '1', 10);\n        const limit = parseInt(searchParams.get('limit') || '20', 10);\n        const result = await getComplaintsWithFilters({\n            ...filters,\n            page,\n            limit\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(result);\n    } catch (error) {\n        console.error('Error fetching complaints:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to fetch complaints'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function getComplaintsWithFilters(filters) {\n    const { status, state, city, category, ward, page = 1, limit = 20 } = filters;\n    const query = {};\n    if (status) query.status = status;\n    if (state) query.state = state;\n    if (city) query.city = city;\n    if (category) query.category = new RegExp(`^${category}$`, 'i');\n    if (ward) query.ward = ward;\n    const skip = (page - 1) * limit;\n    const [complaints, total] = await Promise.all([\n        _models_Complaint__WEBPACK_IMPORTED_MODULE_2__[\"default\"].find(query).sort({\n            created_at: -1\n        }).skip(skip).limit(limit),\n        _models_Complaint__WEBPACK_IMPORTED_MODULE_2__[\"default\"].countDocuments(query)\n    ]);\n    return {\n        items: complaints.map((complaint)=>complaint.toObject()),\n        total,\n        page,\n        pageSize: limit,\n        totalPages: Math.ceil(total / limit)\n    };\n}\nasync function POST(request) {\n    try {\n        await (0,_lib_db__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        const formData = await request.formData();\n        const category = formData.get('category');\n        const description = formData.get('description');\n        const latitude = formData.get('latitude');\n        const longitude = formData.get('longitude');\n        const accuracyM = parseInt(formData.get('accuracyM') || '10', 10);\n        const images = formData.getAll('images');\n        // Validate required fields\n        if (!category || !description || !latitude || !longitude) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Category, description, latitude, and longitude are required'\n            }, {\n                status: 400\n            });\n        }\n        if (!images || images.length < 1) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'At least one image is required'\n            }, {\n                status: 400\n            });\n        }\n        const imageUrls = [];\n        // Process each uploaded image\n        for (const file of images){\n            if (!file || !(file instanceof File)) {\n                continue;\n            }\n            const buffer = Buffer.from(await file.arrayBuffer());\n            const exif = await (0,_lib_imageProcessing__WEBPACK_IMPORTED_MODULE_3__.extractMinimalExif)(buffer);\n            // Validate photo location if available\n            if (exif.gps) {\n                const distance = (0,_lib_imageProcessing__WEBPACK_IMPORTED_MODULE_3__.calculateHaversineDistance)(exif.gps.lat, exif.gps.lng, parseFloat(latitude), parseFloat(longitude));\n                if (distance > 1000) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: 'Photo location too far from selected spot'\n                    }, {\n                        status: 400\n                    });\n                }\n                // Adaptive radius based on accuracy\n                const maxRadius = Math.min(Math.max(accuracyM * 2, 25), 150);\n                if (distance > maxRadius) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: 'Photo location outside allowed radius'\n                    }, {\n                        status: 400\n                    });\n                }\n            }\n            // Validate photo age\n            if (exif.takenAt) {\n                const ageDays = (Date.now() - exif.takenAt.getTime()) / 86400000;\n                if (ageDays > 14) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: 'Photo must be taken within last 14 days'\n                    }, {\n                        status: 400\n                    });\n                }\n            }\n            const cleaned = await (0,_lib_imageProcessing__WEBPACK_IMPORTED_MODULE_3__.stripAndCompress)(buffer);\n            const url = await (0,_lib_storage__WEBPACK_IMPORTED_MODULE_4__.storeImage)(cleaned);\n            imageUrls.push(url);\n        }\n        // Check for similar complaints nearby\n        const searchRadius = accuracyM <= 25 ? 25 : accuracyM <= 50 ? 50 : 100;\n        const similar = await (0,_lib_complaintService__WEBPACK_IMPORTED_MODULE_5__.findNearbySimilarComplaints)(category, parseFloat(latitude), parseFloat(longitude), searchRadius);\n        if (similar && similar.length > 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                status: 'duplicate_suspected',\n                suggested: similar.map((s)=>({\n                        id: s._id,\n                        status: s.status,\n                        created_at: s.created_at,\n                        city: s.city,\n                        state: s.state\n                    })),\n                message: 'A similar complaint exists nearby. You can add your photos as an update (No progress yet) instead of creating a new one.'\n            });\n        }\n        // Create new complaint\n        const doc = await _models_Complaint__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n            category,\n            description,\n            location: {\n                type: 'Point',\n                coordinates: [\n                    parseFloat(longitude),\n                    parseFloat(latitude)\n                ]\n            },\n            status: 'pending',\n            photos_before: imageUrls,\n            created_at: new Date(),\n            last_activity_at: new Date(),\n            timeline: [\n                {\n                    ts: new Date(),\n                    type: 'submitted',\n                    actor: 'public'\n                }\n            ]\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: 'created',\n            complaint_id: doc._id,\n            message: 'Complaint created successfully'\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        console.error('Error creating complaint:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error.message || 'Failed to create complaint'\n        }, {\n            status: 400\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/complaints/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/complaintService.ts":
/*!*********************************!*\
  !*** ./lib/complaintService.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendNoProgressUpdate: () => (/* binding */ appendNoProgressUpdate),\n/* harmony export */   findNearbySimilarComplaints: () => (/* binding */ findNearbySimilarComplaints),\n/* harmony export */   getComplaintMetrics: () => (/* binding */ getComplaintMetrics),\n/* harmony export */   getComplaintsWithFilters: () => (/* binding */ getComplaintsWithFilters),\n/* harmony export */   mergeComplaints: () => (/* binding */ mergeComplaints)\n/* harmony export */ });\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./db */ \"(rsc)/./lib/db.ts\");\n/* harmony import */ var _models_Complaint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/models/Complaint */ \"(rsc)/./models/Complaint.ts\");\n\n\nasync function findNearbySimilarComplaints(category, latitude, longitude, radiusMeters) {\n    await (0,_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    const complaints = await _models_Complaint__WEBPACK_IMPORTED_MODULE_1__[\"default\"].find({\n        category: new RegExp(`^${category}$`, 'i'),\n        location: {\n            $nearSphere: {\n                $geometry: {\n                    type: 'Point',\n                    coordinates: [\n                        longitude,\n                        latitude\n                    ]\n                },\n                $maxDistance: radiusMeters\n            }\n        },\n        status: {\n            $in: [\n                'pending',\n                'in_progress',\n                'stalled',\n                'revived'\n            ]\n        }\n    }).limit(10);\n    return complaints.map((complaint)=>complaint.toObject());\n}\nasync function appendNoProgressUpdate(complaintId, imageUrls) {\n    await (0,_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    const complaint = await _models_Complaint__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findById(complaintId);\n    if (!complaint) {\n        throw new Error('Complaint not found');\n    }\n    // Add images to progress photos\n    complaint.photos_progress.push(...imageUrls);\n    // Add timeline entry\n    complaint.timeline.push({\n        ts: new Date(),\n        type: 'no_progress_update',\n        actor: 'public',\n        images: imageUrls\n    });\n    complaint.last_activity_at = new Date();\n    await complaint.save();\n    return complaint.toObject();\n}\nasync function mergeComplaints(sourceId, targetId, note) {\n    await (0,_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    const [source, target] = await Promise.all([\n        _models_Complaint__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findById(sourceId),\n        _models_Complaint__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findById(targetId)\n    ]);\n    if (!source || !target) {\n        throw new Error('One or both complaints not found');\n    }\n    // Merge photos\n    target.photos_before.push(...source.photos_before);\n    target.photos_progress.push(...source.photos_progress);\n    target.photos_after.push(...source.photos_after);\n    // Add related ID\n    if (!target.related_ids.includes(sourceId)) {\n        target.related_ids.push(sourceId);\n    }\n    // Add timeline entry for merge\n    target.timeline.push({\n        ts: new Date(),\n        type: 'assign',\n        actor: 'official',\n        note: note || `Merged from complaint ${sourceId}`\n    });\n    target.last_activity_at = new Date();\n    // Delete source complaint\n    await source.deleteOne();\n    await target.save();\n    return target.toObject();\n}\nasync function getComplaintsWithFilters(filters) {\n    await (0,_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    const { status, state, city, category, ward, page = 1, limit = 20 } = filters;\n    const query = {};\n    if (status) query.status = status;\n    if (state) query.state = state;\n    if (city) query.city = city;\n    if (category) query.category = new RegExp(`^${category}$`, 'i');\n    if (ward) query.ward = ward;\n    const skip = (page - 1) * limit;\n    const [complaints, total] = await Promise.all([\n        _models_Complaint__WEBPACK_IMPORTED_MODULE_1__[\"default\"].find(query).sort({\n            created_at: -1\n        }).skip(skip).limit(limit),\n        _models_Complaint__WEBPACK_IMPORTED_MODULE_1__[\"default\"].countDocuments(query)\n    ]);\n    return {\n        complaints: complaints.map((complaint)=>complaint.toObject()),\n        total,\n        page,\n        totalPages: Math.ceil(total / limit)\n    };\n}\nasync function getComplaintMetrics() {\n    await (0,_db__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    const [resolved, stalled, revived, active] = await Promise.all([\n        _models_Complaint__WEBPACK_IMPORTED_MODULE_1__[\"default\"].countDocuments({\n            status: 'resolved'\n        }),\n        _models_Complaint__WEBPACK_IMPORTED_MODULE_1__[\"default\"].countDocuments({\n            status: 'stalled'\n        }),\n        _models_Complaint__WEBPACK_IMPORTED_MODULE_1__[\"default\"].countDocuments({\n            status: 'revived'\n        }),\n        _models_Complaint__WEBPACK_IMPORTED_MODULE_1__[\"default\"].countDocuments({\n            status: {\n                $in: [\n                    'pending',\n                    'in_progress'\n                ]\n            }\n        })\n    ]);\n    const overdue = stalled + revived;\n    return {\n        resolved,\n        stalled,\n        revived,\n        active,\n        overdue\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/complaintService.ts\n");

/***/ }),

/***/ "(rsc)/./lib/config.ts":
/*!***********************!*\
  !*** ./lib/config.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config)\n/* harmony export */ });\nconst config = {\n    mongodb: {\n        uri: process.env.MONGO_URI || \"YOUR_MONGO_URI\"\n    },\n    auth: {\n        jwtSecret: process.env.JWT_SECRET || \"dev-secret\",\n        devAdminKey: process.env.DEV_ADMIN_KEY || \"dev-key\"\n    },\n    app: {\n        port: parseInt(process.env.PORT || \"3000\", 10),\n        nodeEnv: \"development\" || 0,\n        nextAuthSecret: process.env.NEXTAUTH_SECRET || \"your-nextauth-secret\",\n        nextAuthUrl: process.env.NEXTAUTH_URL || \"http://localhost:3000\"\n    },\n    business: {\n        stalledAfterDays: 60,\n        defaultProgressDeadlineDays: 30\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvY29uZmlnLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxTQUFTO0lBQ3BCQyxTQUFTO1FBQ1BDLEtBQUtDLFFBQVFDLEdBQUcsQ0FBQ0MsU0FBUyxJQUFJO0lBQ2hDO0lBQ0FDLE1BQU07UUFDSkMsV0FBV0osUUFBUUMsR0FBRyxDQUFDSSxVQUFVLElBQUk7UUFDckNDLGFBQWFOLFFBQVFDLEdBQUcsQ0FBQ00sYUFBYSxJQUFJO0lBQzVDO0lBQ0FDLEtBQUs7UUFDSEMsTUFBTUMsU0FBU1YsUUFBUUMsR0FBRyxDQUFDVSxJQUFJLElBQUksUUFBUTtRQUMzQ0MsU0FBU1osaUJBQXdCLENBQWE7UUFDOUNhLGdCQUFnQmIsUUFBUUMsR0FBRyxDQUFDYSxlQUFlLElBQUk7UUFDL0NDLGFBQWFmLFFBQVFDLEdBQUcsQ0FBQ2UsWUFBWSxJQUFJO0lBQzNDO0lBQ0FDLFVBQVU7UUFDUkMsa0JBQWtCO1FBQ2xCQyw2QkFBNkI7SUFDL0I7QUFDRixFQUFFIiwic291cmNlcyI6WyJDOlxcUHJvamVjdHNcXGltcHJvdmUtbXktY2l0eVxcbGliXFxjb25maWcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuICBtb25nb2RiOiB7XHJcbiAgICB1cmk6IHByb2Nlc3MuZW52Lk1PTkdPX1VSSSB8fCBcIllPVVJfTU9OR09fVVJJXCIsXHJcbiAgfSxcclxuICBhdXRoOiB7XHJcbiAgICBqd3RTZWNyZXQ6IHByb2Nlc3MuZW52LkpXVF9TRUNSRVQgfHwgXCJkZXYtc2VjcmV0XCIsXHJcbiAgICBkZXZBZG1pbktleTogcHJvY2Vzcy5lbnYuREVWX0FETUlOX0tFWSB8fCBcImRldi1rZXlcIixcclxuICB9LFxyXG4gIGFwcDoge1xyXG4gICAgcG9ydDogcGFyc2VJbnQocHJvY2Vzcy5lbnYuUE9SVCB8fCBcIjMwMDBcIiwgMTApLFxyXG4gICAgbm9kZUVudjogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgfHwgXCJkZXZlbG9wbWVudFwiLFxyXG4gICAgbmV4dEF1dGhTZWNyZXQ6IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1NFQ1JFVCB8fCBcInlvdXItbmV4dGF1dGgtc2VjcmV0XCIsXHJcbiAgICBuZXh0QXV0aFVybDogcHJvY2Vzcy5lbnYuTkVYVEFVVEhfVVJMIHx8IFwiaHR0cDovL2xvY2FsaG9zdDozMDAwXCIsXHJcbiAgfSxcclxuICBidXNpbmVzczoge1xyXG4gICAgc3RhbGxlZEFmdGVyRGF5czogNjAsXHJcbiAgICBkZWZhdWx0UHJvZ3Jlc3NEZWFkbGluZURheXM6IDMwLFxyXG4gIH0sXHJcbn07XHJcbiJdLCJuYW1lcyI6WyJjb25maWciLCJtb25nb2RiIiwidXJpIiwicHJvY2VzcyIsImVudiIsIk1PTkdPX1VSSSIsImF1dGgiLCJqd3RTZWNyZXQiLCJKV1RfU0VDUkVUIiwiZGV2QWRtaW5LZXkiLCJERVZfQURNSU5fS0VZIiwiYXBwIiwicG9ydCIsInBhcnNlSW50IiwiUE9SVCIsIm5vZGVFbnYiLCJuZXh0QXV0aFNlY3JldCIsIk5FWFRBVVRIX1NFQ1JFVCIsIm5leHRBdXRoVXJsIiwiTkVYVEFVVEhfVVJMIiwiYnVzaW5lc3MiLCJzdGFsbGVkQWZ0ZXJEYXlzIiwiZGVmYXVsdFByb2dyZXNzRGVhZGxpbmVEYXlzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/config.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ \"(rsc)/./lib/config.ts\");\n\n\nconst MONGODB_URI = _config__WEBPACK_IMPORTED_MODULE_1__.config.mongodb.uri;\nif (!MONGODB_URI) {\n    throw new Error('Please define the MONGO_URI environment variable inside .env.local');\n}\n/**\r\n * Global is used here to maintain a cached connection across hot reloads\r\n * in development. This prevents connections growing exponentially\r\n * during API Route usage.\r\n */ let cached = global.mongoose;\nif (!cached) {\n    cached = global.mongoose = {\n        conn: null,\n        promise: null\n    };\n}\nasync function dbConnect() {\n    if (cached.conn) {\n        return cached.conn;\n    }\n    if (!cached.promise) {\n        const opts = {\n            bufferCommands: false\n        };\n        cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGODB_URI, opts).then((mongoose)=>{\n            console.log('Connected to MongoDB');\n            return mongoose;\n        });\n    }\n    try {\n        cached.conn = await cached.promise;\n    } catch (e) {\n        cached.promise = null;\n        throw e;\n    }\n    return cached.conn;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dbConnect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUNFO0FBRWxDLE1BQU1FLGNBQWNELDJDQUFNQSxDQUFDRSxPQUFPLENBQUNDLEdBQUc7QUFFdEMsSUFBSSxDQUFDRixhQUFhO0lBQ2hCLE1BQU0sSUFBSUcsTUFBTTtBQUNsQjtBQUVBOzs7O0NBSUMsR0FDRCxJQUFJQyxTQUdBLE9BQWdCTixRQUFRO0FBRTVCLElBQUksQ0FBQ00sUUFBUTtJQUNYQSxTQUFTLE9BQWdCTixRQUFRLEdBQUc7UUFBRVEsTUFBTTtRQUFNQyxTQUFTO0lBQUs7QUFDbEU7QUFFQSxlQUFlQztJQUNiLElBQUlKLE9BQU9FLElBQUksRUFBRTtRQUNmLE9BQU9GLE9BQU9FLElBQUk7SUFDcEI7SUFFQSxJQUFJLENBQUNGLE9BQU9HLE9BQU8sRUFBRTtRQUNuQixNQUFNRSxPQUFPO1lBQ1hDLGdCQUFnQjtRQUNsQjtRQUVBTixPQUFPRyxPQUFPLEdBQUdULHVEQUFnQixDQUFDRSxhQUFhUyxNQUFNRyxJQUFJLENBQUMsQ0FBQ2Q7WUFDekRlLFFBQVFDLEdBQUcsQ0FBQztZQUNaLE9BQU9oQjtRQUNUO0lBQ0Y7SUFFQSxJQUFJO1FBQ0ZNLE9BQU9FLElBQUksR0FBRyxNQUFNRixPQUFPRyxPQUFPO0lBQ3BDLEVBQUUsT0FBT1EsR0FBRztRQUNWWCxPQUFPRyxPQUFPLEdBQUc7UUFDakIsTUFBTVE7SUFDUjtJQUVBLE9BQU9YLE9BQU9FLElBQUk7QUFDcEI7QUFFQSxpRUFBZUUsU0FBU0EsRUFBQyIsInNvdXJjZXMiOlsiQzpcXFByb2plY3RzXFxpbXByb3ZlLW15LWNpdHlcXGxpYlxcZGIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcclxuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi9jb25maWcnO1xyXG5cclxuY29uc3QgTU9OR09EQl9VUkkgPSBjb25maWcubW9uZ29kYi51cmk7XHJcblxyXG5pZiAoIU1PTkdPREJfVVJJKSB7XHJcbiAgdGhyb3cgbmV3IEVycm9yKCdQbGVhc2UgZGVmaW5lIHRoZSBNT05HT19VUkkgZW52aXJvbm1lbnQgdmFyaWFibGUgaW5zaWRlIC5lbnYubG9jYWwnKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEdsb2JhbCBpcyB1c2VkIGhlcmUgdG8gbWFpbnRhaW4gYSBjYWNoZWQgY29ubmVjdGlvbiBhY3Jvc3MgaG90IHJlbG9hZHNcclxuICogaW4gZGV2ZWxvcG1lbnQuIFRoaXMgcHJldmVudHMgY29ubmVjdGlvbnMgZ3Jvd2luZyBleHBvbmVudGlhbGx5XHJcbiAqIGR1cmluZyBBUEkgUm91dGUgdXNhZ2UuXHJcbiAqL1xyXG5sZXQgY2FjaGVkOiB7XHJcbiAgY29ubjogdHlwZW9mIG1vbmdvb3NlIHwgbnVsbDtcclxuICBwcm9taXNlOiBQcm9taXNlPHR5cGVvZiBtb25nb29zZT4gfCBudWxsO1xyXG59ID0gKGdsb2JhbCBhcyBhbnkpLm1vbmdvb3NlO1xyXG5cclxuaWYgKCFjYWNoZWQpIHtcclxuICBjYWNoZWQgPSAoZ2xvYmFsIGFzIGFueSkubW9uZ29vc2UgPSB7IGNvbm46IG51bGwsIHByb21pc2U6IG51bGwgfTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZGJDb25uZWN0KCk6IFByb21pc2U8dHlwZW9mIG1vbmdvb3NlPiB7XHJcbiAgaWYgKGNhY2hlZC5jb25uKSB7XHJcbiAgICByZXR1cm4gY2FjaGVkLmNvbm47XHJcbiAgfVxyXG5cclxuICBpZiAoIWNhY2hlZC5wcm9taXNlKSB7XHJcbiAgICBjb25zdCBvcHRzID0ge1xyXG4gICAgICBidWZmZXJDb21tYW5kczogZmFsc2UsXHJcbiAgICB9O1xyXG5cclxuICAgIGNhY2hlZC5wcm9taXNlID0gbW9uZ29vc2UuY29ubmVjdChNT05HT0RCX1VSSSwgb3B0cykudGhlbigobW9uZ29vc2UpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCB0byBNb25nb0RCJyk7XHJcbiAgICAgIHJldHVybiBtb25nb29zZTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIGNhY2hlZC5jb25uID0gYXdhaXQgY2FjaGVkLnByb21pc2U7XHJcbiAgfSBjYXRjaCAoZSkge1xyXG4gICAgY2FjaGVkLnByb21pc2UgPSBudWxsO1xyXG4gICAgdGhyb3cgZTtcclxuICB9XHJcblxyXG4gIHJldHVybiBjYWNoZWQuY29ubjtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZGJDb25uZWN0O1xyXG4iXSwibmFtZXMiOlsibW9uZ29vc2UiLCJjb25maWciLCJNT05HT0RCX1VSSSIsIm1vbmdvZGIiLCJ1cmkiLCJFcnJvciIsImNhY2hlZCIsImdsb2JhbCIsImNvbm4iLCJwcm9taXNlIiwiZGJDb25uZWN0Iiwib3B0cyIsImJ1ZmZlckNvbW1hbmRzIiwiY29ubmVjdCIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./lib/imageProcessing.ts":
/*!********************************!*\
  !*** ./lib/imageProcessing.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateHaversineDistance: () => (/* binding */ calculateHaversineDistance),\n/* harmony export */   extractMinimalExif: () => (/* binding */ extractMinimalExif),\n/* harmony export */   stripAndCompress: () => (/* binding */ stripAndCompress),\n/* harmony export */   validateImageFile: () => (/* binding */ validateImageFile)\n/* harmony export */ });\n/* harmony import */ var sharp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sharp */ \"sharp\");\n/* harmony import */ var sharp__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sharp__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var exifr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! exifr */ \"(rsc)/./node_modules/exifr/dist/full.esm.mjs\");\n\n\nasync function extractMinimalExif(buffer) {\n    try {\n        const exif = await exifr__WEBPACK_IMPORTED_MODULE_1__[\"default\"].parse(buffer, {\n            gps: true,\n            pick: [\n                'GPSLatitude',\n                'GPSLongitude',\n                'DateTimeOriginal',\n                'CreateDate'\n            ]\n        });\n        const result = {};\n        if (exif.GPSLatitude && exif.GPSLongitude) {\n            const lat = exif.GPSLatitude;\n            const lng = exif.GPSLongitude;\n            result.gps = {\n                lat: lat[0] + lat[1] / 60 + lat[2] / 3600,\n                lng: lng[0] + lng[1] / 60 + lng[2] / 3600\n            };\n            // Handle GPS reference (N/S, E/W)\n            if (exif.GPSLatitudeRef === 'S') result.gps.lat = -result.gps.lat;\n            if (exif.GPSLongitudeRef === 'W') result.gps.lng = -result.gps.lng;\n        }\n        if (exif.DateTimeOriginal) {\n            result.takenAt = new Date(exif.DateTimeOriginal);\n        } else if (exif.CreateDate) {\n            result.takenAt = new Date(exif.CreateDate);\n        }\n        return result;\n    } catch (error) {\n        console.error('Error extracting EXIF:', error);\n        return {};\n    }\n}\nasync function stripAndCompress(buffer) {\n    try {\n        // Use Sharp to process the image\n        const processedBuffer = await sharp__WEBPACK_IMPORTED_MODULE_0___default()(buffer).rotate() // Auto-rotate based on EXIF\n        .resize(1200, 1200, {\n            fit: 'inside',\n            withoutEnlargement: true\n        }).jpeg({\n            quality: 85,\n            progressive: true,\n            mozjpeg: true\n        }).toBuffer();\n        return processedBuffer;\n    } catch (error) {\n        console.error('Error processing image:', error);\n        throw new Error('Failed to process image');\n    }\n}\nfunction validateImageFile(file) {\n    // Check file size (max 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n        return {\n            valid: false,\n            error: 'Image size must be less than 10MB'\n        };\n    }\n    // Check file type\n    const allowedTypes = [\n        'image/jpeg',\n        'image/jpg',\n        'image/png',\n        'image/webp'\n    ];\n    if (!allowedTypes.includes(file.type)) {\n        return {\n            valid: false,\n            error: 'Only JPEG, PNG, and WebP images are allowed'\n        };\n    }\n    return {\n        valid: true\n    };\n}\nfunction calculateHaversineDistance(lat1, lon1, lat2, lon2) {\n    const R = 6371000; // Earth's radius in meters\n    const toRad = (d)=>d * Math.PI / 180;\n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n    const a = Math.sin(dLat / 2) ** 2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n    return 2 * R * Math.asin(Math.sqrt(a));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvaW1hZ2VQcm9jZXNzaW5nLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMEI7QUFDQTtBQVVuQixlQUFlRSxtQkFBbUJDLE1BQWM7SUFDckQsSUFBSTtRQUNGLE1BQU1DLE9BQU8sTUFBTUgsbURBQVcsQ0FBQ0UsUUFBUTtZQUNyQ0csS0FBSztZQUNMQyxNQUFNO2dCQUFDO2dCQUFlO2dCQUFnQjtnQkFBb0I7YUFBYTtRQUN6RTtRQUVBLE1BQU1DLFNBQW1CLENBQUM7UUFFMUIsSUFBSUosS0FBS0ssV0FBVyxJQUFJTCxLQUFLTSxZQUFZLEVBQUU7WUFDekMsTUFBTUMsTUFBTVAsS0FBS0ssV0FBVztZQUM1QixNQUFNRyxNQUFNUixLQUFLTSxZQUFZO1lBQzdCRixPQUFPRixHQUFHLEdBQUc7Z0JBQ1hLLEtBQUtBLEdBQUcsQ0FBQyxFQUFFLEdBQUdBLEdBQUcsQ0FBQyxFQUFFLEdBQUcsS0FBS0EsR0FBRyxDQUFDLEVBQUUsR0FBRztnQkFDckNDLEtBQUtBLEdBQUcsQ0FBQyxFQUFFLEdBQUdBLEdBQUcsQ0FBQyxFQUFFLEdBQUcsS0FBS0EsR0FBRyxDQUFDLEVBQUUsR0FBRztZQUN2QztZQUVBLGtDQUFrQztZQUNsQyxJQUFJUixLQUFLUyxjQUFjLEtBQUssS0FBS0wsT0FBT0YsR0FBRyxDQUFDSyxHQUFHLEdBQUcsQ0FBQ0gsT0FBT0YsR0FBRyxDQUFDSyxHQUFHO1lBQ2pFLElBQUlQLEtBQUtVLGVBQWUsS0FBSyxLQUFLTixPQUFPRixHQUFHLENBQUNNLEdBQUcsR0FBRyxDQUFDSixPQUFPRixHQUFHLENBQUNNLEdBQUc7UUFDcEU7UUFFQSxJQUFJUixLQUFLVyxnQkFBZ0IsRUFBRTtZQUN6QlAsT0FBT1EsT0FBTyxHQUFHLElBQUlDLEtBQUtiLEtBQUtXLGdCQUFnQjtRQUNqRCxPQUFPLElBQUlYLEtBQUtjLFVBQVUsRUFBRTtZQUMxQlYsT0FBT1EsT0FBTyxHQUFHLElBQUlDLEtBQUtiLEtBQUtjLFVBQVU7UUFDM0M7UUFFQSxPQUFPVjtJQUNULEVBQUUsT0FBT1csT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMEJBQTBCQTtRQUN4QyxPQUFPLENBQUM7SUFDVjtBQUNGO0FBRU8sZUFBZUUsaUJBQWlCbEIsTUFBYztJQUNuRCxJQUFJO1FBQ0YsaUNBQWlDO1FBQ2pDLE1BQU1tQixrQkFBa0IsTUFBTXRCLDRDQUFLQSxDQUFDRyxRQUNqQ29CLE1BQU0sR0FBRyw0QkFBNEI7U0FDckNDLE1BQU0sQ0FBQyxNQUFNLE1BQU07WUFDbEJDLEtBQUs7WUFDTEMsb0JBQW9CO1FBQ3RCLEdBQ0NDLElBQUksQ0FBQztZQUNKQyxTQUFTO1lBQ1RDLGFBQWE7WUFDYkMsU0FBUztRQUNYLEdBQ0NDLFFBQVE7UUFFWCxPQUFPVDtJQUNULEVBQUUsT0FBT0gsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtRQUN6QyxNQUFNLElBQUlhLE1BQU07SUFDbEI7QUFDRjtBQUVPLFNBQVNDLGtCQUFrQkMsSUFBVTtJQUMxQyw2QkFBNkI7SUFDN0IsSUFBSUEsS0FBS0MsSUFBSSxHQUFHLEtBQUssT0FBTyxNQUFNO1FBQ2hDLE9BQU87WUFBRUMsT0FBTztZQUFPakIsT0FBTztRQUFvQztJQUNwRTtJQUVBLGtCQUFrQjtJQUNsQixNQUFNa0IsZUFBZTtRQUFDO1FBQWM7UUFBYTtRQUFhO0tBQWE7SUFDM0UsSUFBSSxDQUFDQSxhQUFhQyxRQUFRLENBQUNKLEtBQUtLLElBQUksR0FBRztRQUNyQyxPQUFPO1lBQUVILE9BQU87WUFBT2pCLE9BQU87UUFBOEM7SUFDOUU7SUFFQSxPQUFPO1FBQUVpQixPQUFPO0lBQUs7QUFDdkI7QUFFTyxTQUFTSSwyQkFDZEMsSUFBWSxFQUNaQyxJQUFZLEVBQ1pDLElBQVksRUFDWkMsSUFBWTtJQUVaLE1BQU1DLElBQUksU0FBUywyQkFBMkI7SUFDOUMsTUFBTUMsUUFBUSxDQUFDQyxJQUFjQSxJQUFJQyxLQUFLQyxFQUFFLEdBQUc7SUFDM0MsTUFBTUMsT0FBT0osTUFBTUgsT0FBT0Y7SUFDMUIsTUFBTVUsT0FBT0wsTUFBTUYsT0FBT0Y7SUFDMUIsTUFBTVUsSUFBSUosS0FBS0ssR0FBRyxDQUFDSCxPQUFPLE1BQU0sSUFDOUJGLEtBQUtNLEdBQUcsQ0FBQ1IsTUFBTUwsU0FBU08sS0FBS00sR0FBRyxDQUFDUixNQUFNSCxTQUFTSyxLQUFLSyxHQUFHLENBQUNGLE9BQU8sTUFBTTtJQUN4RSxPQUFPLElBQUlOLElBQUlHLEtBQUtPLElBQUksQ0FBQ1AsS0FBS1EsSUFBSSxDQUFDSjtBQUNyQyIsInNvdXJjZXMiOlsiQzpcXFByb2plY3RzXFxpbXByb3ZlLW15LWNpdHlcXGxpYlxcaW1hZ2VQcm9jZXNzaW5nLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzaGFycCBmcm9tICdzaGFycCc7XHJcbmltcG9ydCBleGlmciBmcm9tICdleGlmcic7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEV4aWZEYXRhIHtcclxuICBncHM/OiB7XHJcbiAgICBsYXQ6IG51bWJlcjtcclxuICAgIGxuZzogbnVtYmVyO1xyXG4gIH07XHJcbiAgdGFrZW5BdD86IERhdGU7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBleHRyYWN0TWluaW1hbEV4aWYoYnVmZmVyOiBCdWZmZXIpOiBQcm9taXNlPEV4aWZEYXRhPiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGV4aWYgPSBhd2FpdCBleGlmci5wYXJzZShidWZmZXIsIHtcclxuICAgICAgZ3BzOiB0cnVlLFxyXG4gICAgICBwaWNrOiBbJ0dQU0xhdGl0dWRlJywgJ0dQU0xvbmdpdHVkZScsICdEYXRlVGltZU9yaWdpbmFsJywgJ0NyZWF0ZURhdGUnXSxcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IHJlc3VsdDogRXhpZkRhdGEgPSB7fTtcclxuXHJcbiAgICBpZiAoZXhpZi5HUFNMYXRpdHVkZSAmJiBleGlmLkdQU0xvbmdpdHVkZSkge1xyXG4gICAgICBjb25zdCBsYXQgPSBleGlmLkdQU0xhdGl0dWRlO1xyXG4gICAgICBjb25zdCBsbmcgPSBleGlmLkdQU0xvbmdpdHVkZTtcclxuICAgICAgcmVzdWx0LmdwcyA9IHtcclxuICAgICAgICBsYXQ6IGxhdFswXSArIGxhdFsxXSAvIDYwICsgbGF0WzJdIC8gMzYwMCxcclxuICAgICAgICBsbmc6IGxuZ1swXSArIGxuZ1sxXSAvIDYwICsgbG5nWzJdIC8gMzYwMCxcclxuICAgICAgfTtcclxuXHJcbiAgICAgIC8vIEhhbmRsZSBHUFMgcmVmZXJlbmNlIChOL1MsIEUvVylcclxuICAgICAgaWYgKGV4aWYuR1BTTGF0aXR1ZGVSZWYgPT09ICdTJykgcmVzdWx0Lmdwcy5sYXQgPSAtcmVzdWx0Lmdwcy5sYXQ7XHJcbiAgICAgIGlmIChleGlmLkdQU0xvbmdpdHVkZVJlZiA9PT0gJ1cnKSByZXN1bHQuZ3BzLmxuZyA9IC1yZXN1bHQuZ3BzLmxuZztcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZXhpZi5EYXRlVGltZU9yaWdpbmFsKSB7XHJcbiAgICAgIHJlc3VsdC50YWtlbkF0ID0gbmV3IERhdGUoZXhpZi5EYXRlVGltZU9yaWdpbmFsKTtcclxuICAgIH0gZWxzZSBpZiAoZXhpZi5DcmVhdGVEYXRlKSB7XHJcbiAgICAgIHJlc3VsdC50YWtlbkF0ID0gbmV3IERhdGUoZXhpZi5DcmVhdGVEYXRlKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBleHRyYWN0aW5nIEVYSUY6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIHt9O1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN0cmlwQW5kQ29tcHJlc3MoYnVmZmVyOiBCdWZmZXIpOiBQcm9taXNlPEJ1ZmZlcj4ge1xyXG4gIHRyeSB7XHJcbiAgICAvLyBVc2UgU2hhcnAgdG8gcHJvY2VzcyB0aGUgaW1hZ2VcclxuICAgIGNvbnN0IHByb2Nlc3NlZEJ1ZmZlciA9IGF3YWl0IHNoYXJwKGJ1ZmZlcilcclxuICAgICAgLnJvdGF0ZSgpIC8vIEF1dG8tcm90YXRlIGJhc2VkIG9uIEVYSUZcclxuICAgICAgLnJlc2l6ZSgxMjAwLCAxMjAwLCB7XHJcbiAgICAgICAgZml0OiAnaW5zaWRlJyxcclxuICAgICAgICB3aXRob3V0RW5sYXJnZW1lbnQ6IHRydWUsXHJcbiAgICAgIH0pXHJcbiAgICAgIC5qcGVnKHtcclxuICAgICAgICBxdWFsaXR5OiA4NSxcclxuICAgICAgICBwcm9ncmVzc2l2ZTogdHJ1ZSxcclxuICAgICAgICBtb3pqcGVnOiB0cnVlLFxyXG4gICAgICB9KVxyXG4gICAgICAudG9CdWZmZXIoKTtcclxuXHJcbiAgICByZXR1cm4gcHJvY2Vzc2VkQnVmZmVyO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBwcm9jZXNzaW5nIGltYWdlOicsIGVycm9yKTtcclxuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIHByb2Nlc3MgaW1hZ2UnKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUltYWdlRmlsZShmaWxlOiBGaWxlKTogeyB2YWxpZDogYm9vbGVhbjsgZXJyb3I/OiBzdHJpbmcgfSB7XHJcbiAgLy8gQ2hlY2sgZmlsZSBzaXplIChtYXggMTBNQilcclxuICBpZiAoZmlsZS5zaXplID4gMTAgKiAxMDI0ICogMTAyNCkge1xyXG4gICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBlcnJvcjogJ0ltYWdlIHNpemUgbXVzdCBiZSBsZXNzIHRoYW4gMTBNQicgfTtcclxuICB9XHJcblxyXG4gIC8vIENoZWNrIGZpbGUgdHlwZVxyXG4gIGNvbnN0IGFsbG93ZWRUeXBlcyA9IFsnaW1hZ2UvanBlZycsICdpbWFnZS9qcGcnLCAnaW1hZ2UvcG5nJywgJ2ltYWdlL3dlYnAnXTtcclxuICBpZiAoIWFsbG93ZWRUeXBlcy5pbmNsdWRlcyhmaWxlLnR5cGUpKSB7XHJcbiAgICByZXR1cm4geyB2YWxpZDogZmFsc2UsIGVycm9yOiAnT25seSBKUEVHLCBQTkcsIGFuZCBXZWJQIGltYWdlcyBhcmUgYWxsb3dlZCcgfTtcclxuICB9XHJcblxyXG4gIHJldHVybiB7IHZhbGlkOiB0cnVlIH07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVIYXZlcnNpbmVEaXN0YW5jZShcclxuICBsYXQxOiBudW1iZXIsXHJcbiAgbG9uMTogbnVtYmVyLFxyXG4gIGxhdDI6IG51bWJlcixcclxuICBsb24yOiBudW1iZXJcclxuKTogbnVtYmVyIHtcclxuICBjb25zdCBSID0gNjM3MTAwMDsgLy8gRWFydGgncyByYWRpdXMgaW4gbWV0ZXJzXHJcbiAgY29uc3QgdG9SYWQgPSAoZDogbnVtYmVyKSA9PiBkICogTWF0aC5QSSAvIDE4MDtcclxuICBjb25zdCBkTGF0ID0gdG9SYWQobGF0MiAtIGxhdDEpO1xyXG4gIGNvbnN0IGRMb24gPSB0b1JhZChsb24yIC0gbG9uMSk7XHJcbiAgY29uc3QgYSA9IE1hdGguc2luKGRMYXQgLyAyKSAqKiAyICtcclxuICAgIE1hdGguY29zKHRvUmFkKGxhdDEpKSAqIE1hdGguY29zKHRvUmFkKGxhdDIpKSAqIE1hdGguc2luKGRMb24gLyAyKSAqKiAyO1xyXG4gIHJldHVybiAyICogUiAqIE1hdGguYXNpbihNYXRoLnNxcnQoYSkpO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJzaGFycCIsImV4aWZyIiwiZXh0cmFjdE1pbmltYWxFeGlmIiwiYnVmZmVyIiwiZXhpZiIsInBhcnNlIiwiZ3BzIiwicGljayIsInJlc3VsdCIsIkdQU0xhdGl0dWRlIiwiR1BTTG9uZ2l0dWRlIiwibGF0IiwibG5nIiwiR1BTTGF0aXR1ZGVSZWYiLCJHUFNMb25naXR1ZGVSZWYiLCJEYXRlVGltZU9yaWdpbmFsIiwidGFrZW5BdCIsIkRhdGUiLCJDcmVhdGVEYXRlIiwiZXJyb3IiLCJjb25zb2xlIiwic3RyaXBBbmRDb21wcmVzcyIsInByb2Nlc3NlZEJ1ZmZlciIsInJvdGF0ZSIsInJlc2l6ZSIsImZpdCIsIndpdGhvdXRFbmxhcmdlbWVudCIsImpwZWciLCJxdWFsaXR5IiwicHJvZ3Jlc3NpdmUiLCJtb3pqcGVnIiwidG9CdWZmZXIiLCJFcnJvciIsInZhbGlkYXRlSW1hZ2VGaWxlIiwiZmlsZSIsInNpemUiLCJ2YWxpZCIsImFsbG93ZWRUeXBlcyIsImluY2x1ZGVzIiwidHlwZSIsImNhbGN1bGF0ZUhhdmVyc2luZURpc3RhbmNlIiwibGF0MSIsImxvbjEiLCJsYXQyIiwibG9uMiIsIlIiLCJ0b1JhZCIsImQiLCJNYXRoIiwiUEkiLCJkTGF0IiwiZExvbiIsImEiLCJzaW4iLCJjb3MiLCJhc2luIiwic3FydCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/imageProcessing.ts\n");

/***/ }),

/***/ "(rsc)/./lib/storage.ts":
/*!************************!*\
  !*** ./lib/storage.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteImage: () => (/* binding */ deleteImage),\n/* harmony export */   getImagePath: () => (/* binding */ getImagePath),\n/* harmony export */   storeImage: () => (/* binding */ storeImage)\n/* harmony export */ });\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n// For development, we'll store images in the public/uploads directory\nconst UPLOAD_DIR = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), 'public', 'uploads');\n// Ensure upload directory exists\nasync function ensureUploadDir() {\n    try {\n        await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().access(UPLOAD_DIR);\n    } catch  {\n        await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().mkdir(UPLOAD_DIR, {\n            recursive: true\n        });\n    }\n}\nasync function storeImage(buffer) {\n    await ensureUploadDir();\n    // Generate a unique filename\n    const hash = crypto__WEBPACK_IMPORTED_MODULE_2___default().createHash('sha256').update(buffer).digest('hex');\n    const extension = 'jpg'; // Since we're converting to JPEG\n    const filename = `${hash}.${extension}`;\n    const filepath = path__WEBPACK_IMPORTED_MODULE_1___default().join(UPLOAD_DIR, filename);\n    // Save the file\n    await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().writeFile(filepath, buffer);\n    // Return the public URL\n    return `/uploads/${filename}`;\n}\nasync function deleteImage(imageUrl) {\n    if (!imageUrl.startsWith('/uploads/')) {\n        return; // Not a local file\n    }\n    const filename = path__WEBPACK_IMPORTED_MODULE_1___default().basename(imageUrl);\n    const filepath = path__WEBPACK_IMPORTED_MODULE_1___default().join(UPLOAD_DIR, filename);\n    try {\n        await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().unlink(filepath);\n    } catch (error) {\n        console.error('Error deleting image:', error);\n    // Don't throw - deletion failure shouldn't break the main flow\n    }\n}\nasync function getImagePath(imageUrl) {\n    if (!imageUrl.startsWith('/uploads/')) {\n        return null; // Not a local file\n    }\n    const filename = path__WEBPACK_IMPORTED_MODULE_1___default().basename(imageUrl);\n    const filepath = path__WEBPACK_IMPORTED_MODULE_1___default().join(UPLOAD_DIR, filename);\n    try {\n        await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().access(filepath);\n        return filepath;\n    } catch  {\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3RvcmFnZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBNkI7QUFDTDtBQUNJO0FBRTVCLHNFQUFzRTtBQUN0RSxNQUFNRyxhQUFhRixnREFBUyxDQUFDSSxRQUFRQyxHQUFHLElBQUksVUFBVTtBQUV0RCxpQ0FBaUM7QUFDakMsZUFBZUM7SUFDYixJQUFJO1FBQ0YsTUFBTVAseURBQVMsQ0FBQ0c7SUFDbEIsRUFBRSxPQUFNO1FBQ04sTUFBTUgsd0RBQVEsQ0FBQ0csWUFBWTtZQUFFTyxXQUFXO1FBQUs7SUFDL0M7QUFDRjtBQUVPLGVBQWVDLFdBQVdDLE1BQWM7SUFDN0MsTUFBTUw7SUFFTiw2QkFBNkI7SUFDN0IsTUFBTU0sT0FBT1gsd0RBQWlCLENBQUMsVUFBVWEsTUFBTSxDQUFDSCxRQUFRSSxNQUFNLENBQUM7SUFDL0QsTUFBTUMsWUFBWSxPQUFPLGlDQUFpQztJQUMxRCxNQUFNQyxXQUFXLEdBQUdMLEtBQUssQ0FBQyxFQUFFSSxXQUFXO0lBQ3ZDLE1BQU1FLFdBQVdsQixnREFBUyxDQUFDRSxZQUFZZTtJQUV2QyxnQkFBZ0I7SUFDaEIsTUFBTWxCLDREQUFZLENBQUNtQixVQUFVUDtJQUU3Qix3QkFBd0I7SUFDeEIsT0FBTyxDQUFDLFNBQVMsRUFBRU0sVUFBVTtBQUMvQjtBQUVPLGVBQWVHLFlBQVlDLFFBQWdCO0lBQ2hELElBQUksQ0FBQ0EsU0FBU0MsVUFBVSxDQUFDLGNBQWM7UUFDckMsUUFBUSxtQkFBbUI7SUFDN0I7SUFFQSxNQUFNTCxXQUFXakIsb0RBQWEsQ0FBQ3FCO0lBQy9CLE1BQU1ILFdBQVdsQixnREFBUyxDQUFDRSxZQUFZZTtJQUV2QyxJQUFJO1FBQ0YsTUFBTWxCLHlEQUFTLENBQUNtQjtJQUNsQixFQUFFLE9BQU9PLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLHlCQUF5QkE7SUFDdkMsK0RBQStEO0lBQ2pFO0FBQ0Y7QUFFTyxlQUFlRSxhQUFhTixRQUFnQjtJQUNqRCxJQUFJLENBQUNBLFNBQVNDLFVBQVUsQ0FBQyxjQUFjO1FBQ3JDLE9BQU8sTUFBTSxtQkFBbUI7SUFDbEM7SUFFQSxNQUFNTCxXQUFXakIsb0RBQWEsQ0FBQ3FCO0lBQy9CLE1BQU1ILFdBQVdsQixnREFBUyxDQUFDRSxZQUFZZTtJQUV2QyxJQUFJO1FBQ0YsTUFBTWxCLHlEQUFTLENBQUNtQjtRQUNoQixPQUFPQTtJQUNULEVBQUUsT0FBTTtRQUNOLE9BQU87SUFDVDtBQUNGIiwic291cmNlcyI6WyJDOlxcUHJvamVjdHNcXGltcHJvdmUtbXktY2l0eVxcbGliXFxzdG9yYWdlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tICdmcy9wcm9taXNlcyc7XHJcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xyXG5pbXBvcnQgY3J5cHRvIGZyb20gJ2NyeXB0byc7XHJcblxyXG4vLyBGb3IgZGV2ZWxvcG1lbnQsIHdlJ2xsIHN0b3JlIGltYWdlcyBpbiB0aGUgcHVibGljL3VwbG9hZHMgZGlyZWN0b3J5XHJcbmNvbnN0IFVQTE9BRF9ESVIgPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ3B1YmxpYycsICd1cGxvYWRzJyk7XHJcblxyXG4vLyBFbnN1cmUgdXBsb2FkIGRpcmVjdG9yeSBleGlzdHNcclxuYXN5bmMgZnVuY3Rpb24gZW5zdXJlVXBsb2FkRGlyKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gIHRyeSB7XHJcbiAgICBhd2FpdCBmcy5hY2Nlc3MoVVBMT0FEX0RJUik7XHJcbiAgfSBjYXRjaCB7XHJcbiAgICBhd2FpdCBmcy5ta2RpcihVUExPQURfRElSLCB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzdG9yZUltYWdlKGJ1ZmZlcjogQnVmZmVyKTogUHJvbWlzZTxzdHJpbmc+IHtcclxuICBhd2FpdCBlbnN1cmVVcGxvYWREaXIoKTtcclxuXHJcbiAgLy8gR2VuZXJhdGUgYSB1bmlxdWUgZmlsZW5hbWVcclxuICBjb25zdCBoYXNoID0gY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTI1NicpLnVwZGF0ZShidWZmZXIpLmRpZ2VzdCgnaGV4Jyk7XHJcbiAgY29uc3QgZXh0ZW5zaW9uID0gJ2pwZyc7IC8vIFNpbmNlIHdlJ3JlIGNvbnZlcnRpbmcgdG8gSlBFR1xyXG4gIGNvbnN0IGZpbGVuYW1lID0gYCR7aGFzaH0uJHtleHRlbnNpb259YDtcclxuICBjb25zdCBmaWxlcGF0aCA9IHBhdGguam9pbihVUExPQURfRElSLCBmaWxlbmFtZSk7XHJcblxyXG4gIC8vIFNhdmUgdGhlIGZpbGVcclxuICBhd2FpdCBmcy53cml0ZUZpbGUoZmlsZXBhdGgsIGJ1ZmZlcik7XHJcblxyXG4gIC8vIFJldHVybiB0aGUgcHVibGljIFVSTFxyXG4gIHJldHVybiBgL3VwbG9hZHMvJHtmaWxlbmFtZX1gO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVsZXRlSW1hZ2UoaW1hZ2VVcmw6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGlmICghaW1hZ2VVcmwuc3RhcnRzV2l0aCgnL3VwbG9hZHMvJykpIHtcclxuICAgIHJldHVybjsgLy8gTm90IGEgbG9jYWwgZmlsZVxyXG4gIH1cclxuXHJcbiAgY29uc3QgZmlsZW5hbWUgPSBwYXRoLmJhc2VuYW1lKGltYWdlVXJsKTtcclxuICBjb25zdCBmaWxlcGF0aCA9IHBhdGguam9pbihVUExPQURfRElSLCBmaWxlbmFtZSk7XHJcblxyXG4gIHRyeSB7XHJcbiAgICBhd2FpdCBmcy51bmxpbmsoZmlsZXBhdGgpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBkZWxldGluZyBpbWFnZTonLCBlcnJvcik7XHJcbiAgICAvLyBEb24ndCB0aHJvdyAtIGRlbGV0aW9uIGZhaWx1cmUgc2hvdWxkbid0IGJyZWFrIHRoZSBtYWluIGZsb3dcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRJbWFnZVBhdGgoaW1hZ2VVcmw6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nIHwgbnVsbD4ge1xyXG4gIGlmICghaW1hZ2VVcmwuc3RhcnRzV2l0aCgnL3VwbG9hZHMvJykpIHtcclxuICAgIHJldHVybiBudWxsOyAvLyBOb3QgYSBsb2NhbCBmaWxlXHJcbiAgfVxyXG5cclxuICBjb25zdCBmaWxlbmFtZSA9IHBhdGguYmFzZW5hbWUoaW1hZ2VVcmwpO1xyXG4gIGNvbnN0IGZpbGVwYXRoID0gcGF0aC5qb2luKFVQTE9BRF9ESVIsIGZpbGVuYW1lKTtcclxuXHJcbiAgdHJ5IHtcclxuICAgIGF3YWl0IGZzLmFjY2VzcyhmaWxlcGF0aCk7XHJcbiAgICByZXR1cm4gZmlsZXBhdGg7XHJcbiAgfSBjYXRjaCB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbImZzIiwicGF0aCIsImNyeXB0byIsIlVQTE9BRF9ESVIiLCJqb2luIiwicHJvY2VzcyIsImN3ZCIsImVuc3VyZVVwbG9hZERpciIsImFjY2VzcyIsIm1rZGlyIiwicmVjdXJzaXZlIiwic3RvcmVJbWFnZSIsImJ1ZmZlciIsImhhc2giLCJjcmVhdGVIYXNoIiwidXBkYXRlIiwiZGlnZXN0IiwiZXh0ZW5zaW9uIiwiZmlsZW5hbWUiLCJmaWxlcGF0aCIsIndyaXRlRmlsZSIsImRlbGV0ZUltYWdlIiwiaW1hZ2VVcmwiLCJzdGFydHNXaXRoIiwiYmFzZW5hbWUiLCJ1bmxpbmsiLCJlcnJvciIsImNvbnNvbGUiLCJnZXRJbWFnZVBhdGgiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/storage.ts\n");

/***/ }),

/***/ "(rsc)/./models/Complaint.ts":
/*!*****************************!*\
  !*** ./models/Complaint.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst TimelineEventSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    ts: {\n        type: Date,\n        required: true\n    },\n    type: {\n        type: String,\n        required: true\n    },\n    note: String,\n    actor: {\n        type: String,\n        enum: [\n            \"public\",\n            \"official\",\n            \"system\"\n        ],\n        required: true\n    },\n    images: [\n        String\n    ],\n    reason: String\n}, {\n    _id: false\n});\nconst ComplaintSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    category: {\n        type: String,\n        required: true\n    },\n    description: {\n        type: String\n    },\n    location: {\n        type: {\n            type: String,\n            enum: [\n                \"Point\"\n            ],\n            default: \"Point\"\n        },\n        coordinates: {\n            type: [\n                Number\n            ],\n            required: true\n        }\n    },\n    state: String,\n    city: String,\n    ward: String,\n    status: {\n        type: String,\n        enum: [\n            \"pending\",\n            \"in_progress\",\n            \"stalled\",\n            \"revived\",\n            \"resolved\"\n        ],\n        default: \"pending\"\n    },\n    created_at: {\n        type: Date,\n        default: ()=>new Date()\n    },\n    first_progress_at: Date,\n    progress_deadline_days: {\n        type: Number,\n        default: 60\n    },\n    hold_periods: [\n        {\n            start: Date,\n            expected_resume_at: Date,\n            end: Date,\n            reason: String\n        }\n    ],\n    accumulated_hold_seconds: {\n        type: Number,\n        default: 0\n    },\n    stalled_since: Date,\n    revived_since: Date,\n    last_activity_at: {\n        type: Date,\n        default: ()=>new Date()\n    },\n    assigned: {\n        dept_id: String,\n        contractor_id: String,\n        due: Date\n    },\n    photos_before: [\n        String\n    ],\n    photos_progress: [\n        String\n    ],\n    photos_after: [\n        String\n    ],\n    related_ids: [\n        String\n    ],\n    timeline: [\n        TimelineEventSchema\n    ]\n});\n// Add indexes for better query performance\nComplaintSchema.index({\n    location: \"2dsphere\"\n});\nComplaintSchema.index({\n    status: 1,\n    state: 1,\n    city: 1,\n    category: 1\n});\nComplaintSchema.index({\n    created_at: 1\n});\nComplaintSchema.index({\n    stalled_since: 1,\n    revived_since: 1\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).Complaint || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"Complaint\", ComplaintSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9tb2RlbHMvQ29tcGxhaW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnQztBQUdoQyxNQUFNQyxzQkFBc0IsSUFBSUQsd0RBQWUsQ0FDdkM7SUFDUUcsSUFBSTtRQUFFQyxNQUFNQztRQUFNQyxVQUFVO0lBQUs7SUFDakNGLE1BQU07UUFBRUEsTUFBTUc7UUFBUUQsVUFBVTtJQUFLO0lBQ3JDRSxNQUFNRDtJQUNORSxPQUFPO1FBQ0NMLE1BQU1HO1FBQ05HLE1BQU07WUFBQztZQUFVO1lBQVk7U0FBUztRQUN0Q0osVUFBVTtJQUNsQjtJQUNBSyxRQUFRO1FBQUNKO0tBQU87SUFDaEJLLFFBQVFMO0FBQ2hCLEdBQ0E7SUFBRU0sS0FBSztBQUFNO0FBR3JCLE1BQU1DLGtCQUFrQixJQUFJZCx3REFBZSxDQUFDO0lBQ3BDZSxVQUFVO1FBQUVYLE1BQU1HO1FBQVFELFVBQVU7SUFBSztJQUN6Q1UsYUFBYTtRQUFFWixNQUFNRztJQUFPO0lBQzVCVSxVQUFVO1FBQ0ZiLE1BQU07WUFBRUEsTUFBTUc7WUFBUUcsTUFBTTtnQkFBQzthQUFRO1lBQUVRLFNBQVM7UUFBUTtRQUN4REMsYUFBYTtZQUFFZixNQUFNO2dCQUFDZ0I7YUFBTztZQUFFZCxVQUFVO1FBQUs7SUFDdEQ7SUFDQWUsT0FBT2Q7SUFDUGUsTUFBTWY7SUFDTmdCLE1BQU1oQjtJQUNOaUIsUUFBUTtRQUNBcEIsTUFBTUc7UUFDTkcsTUFBTTtZQUNFO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7U0FDUDtRQUNEUSxTQUFTO0lBQ2pCO0lBQ0FPLFlBQVk7UUFBRXJCLE1BQU1DO1FBQU1hLFNBQVMsSUFBTSxJQUFJYjtJQUFPO0lBQ3BEcUIsbUJBQW1CckI7SUFDbkJzQix3QkFBd0I7UUFBRXZCLE1BQU1nQjtRQUFRRixTQUFTO0lBQUc7SUFDcERVLGNBQWM7UUFDTjtZQUNRQyxPQUFPeEI7WUFDUHlCLG9CQUFvQnpCO1lBQ3BCMEIsS0FBSzFCO1lBQ0xPLFFBQVFMO1FBQ2hCO0tBQ1A7SUFDRHlCLDBCQUEwQjtRQUFFNUIsTUFBTWdCO1FBQVFGLFNBQVM7SUFBRTtJQUNyRGUsZUFBZTVCO0lBQ2Y2QixlQUFlN0I7SUFDZjhCLGtCQUFrQjtRQUFFL0IsTUFBTUM7UUFBTWEsU0FBUyxJQUFNLElBQUliO0lBQU87SUFDMUQrQixVQUFVO1FBQUVDLFNBQVM5QjtRQUFRK0IsZUFBZS9CO1FBQVFnQyxLQUFLbEM7SUFBSztJQUM5RG1DLGVBQWU7UUFBQ2pDO0tBQU87SUFDdkJrQyxpQkFBaUI7UUFBQ2xDO0tBQU87SUFDekJtQyxjQUFjO1FBQUNuQztLQUFPO0lBQ3RCb0MsYUFBYTtRQUFDcEM7S0FBTztJQUNyQnFDLFVBQVU7UUFBQzNDO0tBQW9CO0FBQ3ZDO0FBRUEsMkNBQTJDO0FBQzNDYSxnQkFBZ0IrQixLQUFLLENBQUM7SUFBRTVCLFVBQVU7QUFBVztBQUM3Q0gsZ0JBQWdCK0IsS0FBSyxDQUFDO0lBQUVyQixRQUFRO0lBQUdILE9BQU87SUFBR0MsTUFBTTtJQUFHUCxVQUFVO0FBQUU7QUFDbEVELGdCQUFnQitCLEtBQUssQ0FBQztJQUFFcEIsWUFBWTtBQUFFO0FBQ3RDWCxnQkFBZ0IrQixLQUFLLENBQUM7SUFBRVosZUFBZTtJQUFHQyxlQUFlO0FBQUU7QUFFM0QsaUVBQWVsQyx3REFBZSxDQUFDK0MsU0FBUyxJQUFJL0MscURBQWMsQ0FBQyxhQUFhYyxnQkFBZ0JBLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxQcm9qZWN0c1xcaW1wcm92ZS1teS1jaXR5XFxtb2RlbHNcXENvbXBsYWludC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCI7XHJcbmltcG9ydCB0eXBlIHsgQ29tcGxhaW50LCBUaW1lbGluZUV2ZW50IH0gZnJvbSBcIkAvdHlwZXNcIjtcclxuXHJcbmNvbnN0IFRpbWVsaW5lRXZlbnRTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRzOiB7IHR5cGU6IERhdGUsIHJlcXVpcmVkOiB0cnVlIH0sXHJcbiAgICAgICAgICAgICAgICB0eXBlOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcclxuICAgICAgICAgICAgICAgIG5vdGU6IFN0cmluZyxcclxuICAgICAgICAgICAgICAgIGFjdG9yOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZW51bTogW1wicHVibGljXCIsIFwib2ZmaWNpYWxcIiwgXCJzeXN0ZW1cIl0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGltYWdlczogW1N0cmluZ10sXHJcbiAgICAgICAgICAgICAgICByZWFzb246IFN0cmluZyxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHsgX2lkOiBmYWxzZSB9XHJcbik7XHJcblxyXG5jb25zdCBDb21wbGFpbnRTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcclxuICAgICAgICBjYXRlZ29yeTogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sXHJcbiAgICAgICAgZGVzY3JpcHRpb246IHsgdHlwZTogU3RyaW5nIH0sXHJcbiAgICAgICAgbG9jYXRpb246IHtcclxuICAgICAgICAgICAgICAgIHR5cGU6IHsgdHlwZTogU3RyaW5nLCBlbnVtOiBbXCJQb2ludFwiXSwgZGVmYXVsdDogXCJQb2ludFwiIH0sXHJcbiAgICAgICAgICAgICAgICBjb29yZGluYXRlczogeyB0eXBlOiBbTnVtYmVyXSwgcmVxdWlyZWQ6IHRydWUgfSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHN0YXRlOiBTdHJpbmcsXHJcbiAgICAgICAgY2l0eTogU3RyaW5nLFxyXG4gICAgICAgIHdhcmQ6IFN0cmluZyxcclxuICAgICAgICBzdGF0dXM6IHtcclxuICAgICAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICAgICAgICAgIGVudW06IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJwZW5kaW5nXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaW5fcHJvZ3Jlc3NcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJzdGFsbGVkXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicmV2aXZlZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcInJlc29sdmVkXCIsXHJcbiAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogXCJwZW5kaW5nXCIsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjcmVhdGVkX2F0OiB7IHR5cGU6IERhdGUsIGRlZmF1bHQ6ICgpID0+IG5ldyBEYXRlKCkgfSxcclxuICAgICAgICBmaXJzdF9wcm9ncmVzc19hdDogRGF0ZSxcclxuICAgICAgICBwcm9ncmVzc19kZWFkbGluZV9kYXlzOiB7IHR5cGU6IE51bWJlciwgZGVmYXVsdDogNjAgfSxcclxuICAgICAgICBob2xkX3BlcmlvZHM6IFtcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQ6IERhdGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkX3Jlc3VtZV9hdDogRGF0ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kOiBEYXRlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFzb246IFN0cmluZyxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgXSxcclxuICAgICAgICBhY2N1bXVsYXRlZF9ob2xkX3NlY29uZHM6IHsgdHlwZTogTnVtYmVyLCBkZWZhdWx0OiAwIH0sXHJcbiAgICAgICAgc3RhbGxlZF9zaW5jZTogRGF0ZSxcclxuICAgICAgICByZXZpdmVkX3NpbmNlOiBEYXRlLFxyXG4gICAgICAgIGxhc3RfYWN0aXZpdHlfYXQ6IHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogKCkgPT4gbmV3IERhdGUoKSB9LFxyXG4gICAgICAgIGFzc2lnbmVkOiB7IGRlcHRfaWQ6IFN0cmluZywgY29udHJhY3Rvcl9pZDogU3RyaW5nLCBkdWU6IERhdGUgfSxcclxuICAgICAgICBwaG90b3NfYmVmb3JlOiBbU3RyaW5nXSxcclxuICAgICAgICBwaG90b3NfcHJvZ3Jlc3M6IFtTdHJpbmddLFxyXG4gICAgICAgIHBob3Rvc19hZnRlcjogW1N0cmluZ10sXHJcbiAgICAgICAgcmVsYXRlZF9pZHM6IFtTdHJpbmddLFxyXG4gICAgICAgIHRpbWVsaW5lOiBbVGltZWxpbmVFdmVudFNjaGVtYV0sXHJcbn0pO1xyXG5cclxuLy8gQWRkIGluZGV4ZXMgZm9yIGJldHRlciBxdWVyeSBwZXJmb3JtYW5jZVxyXG5Db21wbGFpbnRTY2hlbWEuaW5kZXgoeyBsb2NhdGlvbjogXCIyZHNwaGVyZVwiIH0pO1xyXG5Db21wbGFpbnRTY2hlbWEuaW5kZXgoeyBzdGF0dXM6IDEsIHN0YXRlOiAxLCBjaXR5OiAxLCBjYXRlZ29yeTogMSB9KTtcclxuQ29tcGxhaW50U2NoZW1hLmluZGV4KHsgY3JlYXRlZF9hdDogMSB9KTtcclxuQ29tcGxhaW50U2NoZW1hLmluZGV4KHsgc3RhbGxlZF9zaW5jZTogMSwgcmV2aXZlZF9zaW5jZTogMSB9KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVscy5Db21wbGFpbnQgfHwgbW9uZ29vc2UubW9kZWwoXCJDb21wbGFpbnRcIiwgQ29tcGxhaW50U2NoZW1hKTtcclxuIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiVGltZWxpbmVFdmVudFNjaGVtYSIsIlNjaGVtYSIsInRzIiwidHlwZSIsIkRhdGUiLCJyZXF1aXJlZCIsIlN0cmluZyIsIm5vdGUiLCJhY3RvciIsImVudW0iLCJpbWFnZXMiLCJyZWFzb24iLCJfaWQiLCJDb21wbGFpbnRTY2hlbWEiLCJjYXRlZ29yeSIsImRlc2NyaXB0aW9uIiwibG9jYXRpb24iLCJkZWZhdWx0IiwiY29vcmRpbmF0ZXMiLCJOdW1iZXIiLCJzdGF0ZSIsImNpdHkiLCJ3YXJkIiwic3RhdHVzIiwiY3JlYXRlZF9hdCIsImZpcnN0X3Byb2dyZXNzX2F0IiwicHJvZ3Jlc3NfZGVhZGxpbmVfZGF5cyIsImhvbGRfcGVyaW9kcyIsInN0YXJ0IiwiZXhwZWN0ZWRfcmVzdW1lX2F0IiwiZW5kIiwiYWNjdW11bGF0ZWRfaG9sZF9zZWNvbmRzIiwic3RhbGxlZF9zaW5jZSIsInJldml2ZWRfc2luY2UiLCJsYXN0X2FjdGl2aXR5X2F0IiwiYXNzaWduZWQiLCJkZXB0X2lkIiwiY29udHJhY3Rvcl9pZCIsImR1ZSIsInBob3Rvc19iZWZvcmUiLCJwaG90b3NfcHJvZ3Jlc3MiLCJwaG90b3NfYWZ0ZXIiLCJyZWxhdGVkX2lkcyIsInRpbWVsaW5lIiwiaW5kZXgiLCJtb2RlbHMiLCJDb21wbGFpbnQiLCJtb2RlbCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./models/Complaint.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcomplaints%2Froute&page=%2Fapi%2Fcomplaints%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcomplaints%2Froute.ts&appDir=C%3A%5CProjects%5Cimprove-my-city%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CProjects%5Cimprove-my-city&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcomplaints%2Froute&page=%2Fapi%2Fcomplaints%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcomplaints%2Froute.ts&appDir=C%3A%5CProjects%5Cimprove-my-city%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CProjects%5Cimprove-my-city&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var C_Projects_improve_my_city_app_api_complaints_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/complaints/route.ts */ \"(rsc)/./app/api/complaints/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/complaints/route\",\n        pathname: \"/api/complaints\",\n        filename: \"route\",\n        bundlePath: \"app/api/complaints/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"C:\\\\Projects\\\\improve-my-city\\\\app\\\\api\\\\complaints\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Projects_improve_my_city_app_api_complaints_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/complaints/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcomplaints%2Froute&page=%2Fapi%2Fcomplaints%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcomplaints%2Froute.ts&appDir=C%3A%5CProjects%5Cimprove-my-city%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CProjects%5Cimprove-my-city&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongoose");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "sharp":
/*!************************!*\
  !*** external "sharp" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("sharp");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/exifr"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcomplaints%2Froute&page=%2Fapi%2Fcomplaints%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcomplaints%2Froute.ts&appDir=C%3A%5CProjects%5Cimprove-my-city%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CProjects%5Cimprove-my-city&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();